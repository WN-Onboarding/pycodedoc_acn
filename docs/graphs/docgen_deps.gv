digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_095788d5 [label="285: get_modules_paths()" name="parser::Parser.get_modules_paths" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_42b2b8c8 [label="132: get_classes()" name="parser::Parser.get_classes" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_6f9e8673 [label="187: get_deps_code()" name="parser::Parser.get_deps_code" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_a21425a8 [label="176: get_modules_code()" name="docgen::DocGen.get_modules_code" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_e72d43e0 [label="123: get_modules_deps_prompts()" name="prompts::get_modules_deps_prompts" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_788d6575 [label="263: generate_markdown()" name="docgen::DocGen.generate_markdown" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_1b5b7c2c [label="0: (global)()" name="docgen::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_db42a76b [label="46: run_batch_completions()" name="llm::Llm.run_batch_completions" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_237fff32 [label="108: get_modules()" name="parser::Parser.get_modules" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_407023ec [label="144: generate_classes_desc()" name="docgen::DocGen.generate_classes_desc" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_f405a517 [label="165: get_project_prompt()" name="prompts::get_project_prompt" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_fb0ec383 [label="218: generate_project_desc()" name="docgen::DocGen.generate_project_desc" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_44439bb0 [label="166: generate_modules_desc()" name="docgen::DocGen.generate_modules_desc" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_35fd6164 [label="55: get_functions_prompts()" name="prompts::get_functions_prompts" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_0877696a [label="171: get_code_structure()" name="parser::Parser.get_code_structure" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_7d9b4f76 [label="145: get_functions()" name="parser::Parser.get_functions" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_1d5d4eb5 [label="129: generate_functions_desc()" name="docgen::DocGen.generate_functions_desc" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_eaa3a14a [label="72: get_classes_prompts()" name="prompts::get_classes_prompts" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a1d5f44b [label="326: get_tree()" name="parser::Parser.get_tree" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_f7789160 [label="0: (global)()" name="parser::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_eff5c2e1 [label="25: run_completions()" name="llm::Llm.run_completions" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_7309dfbd [label="6: set_logger()" name="utils::set_logger" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_6541571e [label="210: write_graphs()" name="parser::Parser.write_graphs" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_f2f95971 [label="351: get_module_deps()" name="parser::Parser.get_module_deps" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_fc81317a [label="191: generate_modules_deps_desc()" name="docgen::DocGen.generate_modules_deps_desc" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_7cd0c93a [label="89: get_modules_prompts()" name="prompts::get_modules_prompts" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_29237da9 [label="155: get_classes_code()" name="docgen::DocGen.get_classes_code" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_1b5b7c2c -> node_7309dfbd [color="#F0E442" penwidth="2"];
node_1d5d4eb5 -> node_7d9b4f76 [color="#0072B2" penwidth="2"];
node_1d5d4eb5 -> node_35fd6164 [color="#0072B2" penwidth="2"];
node_1d5d4eb5 -> node_db42a76b [color="#0072B2" penwidth="2"];
node_1d5d4eb5 -> node_7d9b4f76 [color="#0072B2" penwidth="2"];
node_407023ec -> node_42b2b8c8 [color="#F0E442" penwidth="2"];
node_407023ec -> node_eaa3a14a [color="#F0E442" penwidth="2"];
node_407023ec -> node_db42a76b [color="#F0E442" penwidth="2"];
node_29237da9 -> node_0877696a [color="#E69F00" penwidth="2"];
node_44439bb0 -> node_237fff32 [color="#000000" penwidth="2"];
node_44439bb0 -> node_7cd0c93a [color="#000000" penwidth="2"];
node_44439bb0 -> node_db42a76b [color="#000000" penwidth="2"];
node_a21425a8 -> node_0877696a [color="#000000" penwidth="2"];
node_a21425a8 -> node_6541571e [color="#000000" penwidth="2"];
node_fc81317a -> node_237fff32 [color="#56B4E9" penwidth="2"];
node_fc81317a -> node_f2f95971 [color="#56B4E9" penwidth="2"];
node_fc81317a -> node_6f9e8673 [color="#56B4E9" penwidth="2"];
node_fc81317a -> node_e72d43e0 [color="#56B4E9" penwidth="2"];
node_fc81317a -> node_db42a76b [color="#56B4E9" penwidth="2"];
node_fb0ec383 -> node_f405a517 [color="#009E73" penwidth="2"];
node_fb0ec383 -> node_a1d5f44b [color="#009E73" penwidth="2"];
node_fb0ec383 -> node_eff5c2e1 [color="#009E73" penwidth="2"];
node_788d6575 -> node_a1d5f44b [color="#0072B2" penwidth="2"];
node_788d6575 -> node_095788d5 [color="#0072B2" penwidth="2"];
node_788d6575 -> node_095788d5 [color="#0072B2" penwidth="2"];
node_f7789160 -> node_7309dfbd [color="#000000" penwidth="2"];
subgraph cluster_fd376571 {
    node_1b5b7c2c;
    label="File: docgen";
    name="docgen";
    style="filled";
    graph[style=dotted];
    subgraph cluster_928eec6a {
        node_1d5d4eb5 node_407023ec node_29237da9 node_44439bb0 node_a21425a8 node_fc81317a node_fb0ec383 node_788d6575;
        label="Class: DocGen";
        name="DocGen";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_f90b8e17 {
    label="File: llm";
    name="llm";
    style="filled";
    graph[style=dotted];
    subgraph cluster_8819fe5b {
        node_eff5c2e1 node_db42a76b;
        label="Class: Llm";
        name="Llm";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_f5c95189 {
    node_35fd6164 node_eaa3a14a node_7cd0c93a node_e72d43e0 node_f405a517;
    label="File: prompts";
    name="prompts";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_56e040bf {
    node_f7789160;
    label="File: parser";
    name="parser";
    style="filled";
    graph[style=dotted];
    subgraph cluster_150d1711 {
        node_237fff32 node_42b2b8c8 node_7d9b4f76 node_0877696a node_6f9e8673 node_6541571e node_095788d5 node_a1d5f44b node_f2f95971;
        label="Class: Parser";
        name="Parser";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_32f7edc7 {
    node_7309dfbd;
    label="File: utils";
    name="utils";
    style="filled";
    graph[style=dotted];
};
}
